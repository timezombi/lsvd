#!/usr/bin/env python
#Created 3/29/2012 by Brandon Barton
#Converts a directory of video files (that ffmpeg is capable of decoding) into a summed duration
#Note: Requires ffmpeg be installed

#BUG: Duplicates are not automatically purged
import os, sys, re, datetime
from video_duration import *

#Technically, I guess this will break if you have a video file named "-h" or "--help" (a bad idea)
def print_help():
	print "Usage: lsvd [OPTIONS] [FILES/DIRS]"
	print "Lists the total sum of the video lengths of the FILES/DIRS given as command-line arguments"
	print "OPTIONS: -h, --help: Prints this message."

#Sums video durations of all files in a directory <path>
def listdirvd(path):
	#Lists a single directory full of only video files
	dirList=os.listdir(path)

	#Convert to absolute paths to make the timestamp string processor happy
	for i in range(len(dirList)):
		dirList[i] = os.path.abspath(dirList[i])

	accTime = datetime.timedelta()

	#Make a list of datetime objects representing duration
	for fname in dirList:
		ts = getDurationTimestamp(fname)
		accTime += ts

	return accTime

#lsvd: Lists video durations.
#output: A datetime.timedelta representing the summation of all the video durations given as command-line arguments.
def lsvd():
	##All executed code below
	timedeltasum = datetime.timedelta()

	#Extract what we want to check for durations
	if len(sys.argv) > 1:
		args=list(sys.argv[1:])  # insert the path to the FILES/DIRS of interest here
	else:
		args = ["./"]

	while len(args) > 0:
		cur = args.pop()
		if os.path.isdir(cur):
			timedeltasum += listdirvd(cur)
		else: 
			#UNWISE: Assumes that it is a video file, otherwise. ffprobe seems to handle it fine, though.
			#TODO: Add explicit exception handling.
			timedeltasum += getDurationTimestamp(os.path.abspath(cur)) #TODO: Check to see if cur is already in path form.

	#Return the full sum of all the time deltas
	return timedeltasum

def main():
	if ("-h" in sys.argv) or ("--help" in sys.argv):
		print_help()
	else:
		print lsvd()

if __name__ == "__main__":
	main()